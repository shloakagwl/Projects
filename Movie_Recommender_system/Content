import pandas as pd
from rake_nltk import Rake
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer
#upload file from local drive....Part 1
import io
from google.colab import files
uploaded = files.upload()
#upload file from local drive....Part 2
df2 = pd.read_csv(io.BytesIO(uploaded['movies.csv']),error_bad_lines=False)
df = df2[['title','genres']]

for i in range(df.shape[0]):
  df['genres'][i] = df['genres'][i].replace('|'," ")

# initializing the new column
df['Key_words'] = ""

for index, row in df.iterrows():
    plot = row['genres']

    # instantiating Rake, by default is uses english stopwords from NLTK
    # and discard all puntuation characters
    r = Rake()

    # extracting the words by passing the text
    r.extract_keywords_from_text(plot)

    # getting the dictionary whith key words and their scores
    key_words_dict_scores = r.get_word_degrees()
    
    # assigning the key words to the new column
    row['Key_words'] = list(key_words_dict_scores.keys())

df.set_index('title', inplace = True)

df.drop(columns = [col for col in df.columns if col!= 'genres'], inplace = True)

count = CountVectorizer()
count_matrix = count.fit_transform(df['genres'])

indices = pd.Series(df.index)

cosine_sim = cosine_similarity(count_matrix, count_matrix)

def recommendations(title, cosine_sim = cosine_sim):
    
    recommended_movies = []
    
    # gettin the index of the movie that matches the title
    idx = indices[indices == title].index[0]

    # creating a Series with the similarity scores in descending order
    score_series = pd.Series(cosine_sim[idx]).sort_values(ascending = False)
    
    # getting the indexes of the 10 most similar movies
    top_10_indexes = list(score_series.iloc[1:11].index)
    
    # populating the list with the titles of the best 10 matching movies
    for i in top_10_indexes:
        recommended_movies.append(list(df.index)[i])
        
    return recommended_movies

recommendations('Clueless (1995)')
